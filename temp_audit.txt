# Аудит репозитория «crupto»

## 1. Карта проекта (текущее состояние)
- Корень: `README.md` отсутствует.
- Каталоги: `.vscode/`, `dashboards/grafana/`, `reports/` (создан сейчас).
- Файлы верхнего уровня: `ТЗ.txt`, `Инструкция Codex.txt`, `Новые идеи.txt`, `CHANGELOG.md`, `.env.example`.
- Точки входа и исполняемые скрипты: отсутствуют.
- Конфигурации: только `.env.example`; `configs/` отсутствует.

```text
.
├── .env.example
├── CHANGELOG.md
├── Инструкция Codex.txt
├── Новые идеи.txt
├── ТЗ.txt
├── .vscode/
│   └── settings.json
├── dashboards/
│   └── grafana/
│       └── README_GRAFANA.md
└── reports/
    └── 00_repo_audit.md   ← текущий файл
```

## 2. Сопоставление с требованиями ТЗ
- **prod_core/**: отсутствует полностью (data, indicators, strategies, risk, exec, monitor, configs, runner).
- **brain_orchestrator/**: отсутствует (agents, tools, validators, brain).
- **tools/**: отсутствует (подкаталоги для способностей агентов не созданы).
- **research_lab/**: отсутствует.
- **configs/**: нет `governance.yaml`, `enable_map.yaml`, `symbols.yaml`.
- **scripts/**: нет стартовых скриптов `run_paper.sh`, `run_live.sh`.
- **tests/**: отсутствует pytest-каркас и проверки (no-lookahead, risk, governor).
- **dashboards/grafana/**: есть только README без datasource/dashboard.
- **reports/**: не было ни одного артефакта 00–09 (создание требуется).
- **Документация**: нет `README.md`, `docs/DEV_SETUP.md`, `docs/RUNBOOK.md`.
- **Зависимости**: нет `requirements.txt` или `pyproject.toml`.

## 3. Несоответствия и пробелы
- Структура каталога не соответствует ТЗ: отсутствует боевое ядро, оркестратор, инструменты, лаборатория, конфиги, пайплайн запуска.
- Нет механизмов управления рисками, ограничений governance, параметров риска по умолчанию.
- Не реализованы агенты и их инструменты, нет LLM-оркестраторов и telemetry exporter.
- Отсутствуют метрики Prometheus, Grafana dashboard.json, datasource.
- Нет тестов, пайплайна champion/challenger, CI артефактов.
- Не существует документации по установке, запуску, runbook, acceptance checklist.

## 4. Риски и блокеры
- Невозможно запустить даже paper-режим: нет кода, стратегий, исполняемого runner.
- Риск нарушения governance: отсутствуют конфиги и валидаторы, нечем enforce ограничения.
- Мониторинг и метрики не готовы: отсутствие telemetry лишает возможности контроля SLA.
- Отсутствие тестов → нельзя подтвердить требования Acceptance (coverage ≥70%, e2e мок-тест).
- Нет зависимостей → любая установка невозможна без подготовки списка библиотек.

## 5. Быстрые фиксы (приоритет на ближайшие 48 ч)
1. Развернуть структуру каталогов и шаблонные модули `prod_core`, `brain_orchestrator`, `tools`, `configs`, `scripts`, `tests`, `runner.py`.
2. Сформировать базовый `requirements.txt` (Python 3.11) с основными библиотеками из ТЗ.
3. Подготовить отчёты `reports/01-09`, документацию `README.md`, `docs/DEV_SETUP.md`, `docs/RUNBOOK.md`, бэклог `TODO.md`.
4. Реализовать pydantic-валидаторы конфигов, телеметрию-заглушку для Prometheus/CSV и запусковой скрипт `scripts/run_paper.sh` (MODE=paper).
5. Настроить pytest-каркас и тесты на целостность данных, индикаторы, risk-governor.
